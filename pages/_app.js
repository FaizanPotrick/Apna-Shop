import React, { useState } from "react";
import "../styles/globals.css";
import Context from "../components/Context";
import Alert from "../components/Alert";
import Navbar from "../components/Navbar";
import Head from "next/head";
import Script from "next/script";
import { MantineProvider, Text } from "@mantine/core";
import Cookies from "js-cookie";

function MyApp({ Component, pageProps }) {
  const [isAlert, setIsAlert] = useState({
    alert: false,
    message: "",
  });
  const [isError, setIsError] = useState({
    errorPage: false,
    status: "",
    message: "",
  });
  const [isLogin, setIsLogin] = useState(Cookies.get("user_id") ? true : false);
  const data = [
    {
      CategoryName: "grocery",
      SubCategory: ["pulse", "fruits", "snacks", "vegetables"],
      CategoryImage: "groceries.webp",
    },
    {
      CategoryName: "mobiles",
      SubCategory: ["samsung", "oppo", "apple", "redmi", "huawei"],
      CategoryImage: "mobiles.jpg",
    },
    {
      CategoryName: "fashion",
      SubCategory: ["men", "women"],
      CategoryImage: "fashion.jpg",
    },
    {
      CategoryName: "electronic",
      SubCategory: [
        "monitor",
        "mouse",
        "keyboard",
        "router",
        "laptop",
        "airpod",
        "headphone",
        "earphone",
        "bluetooth speaker",
        "pc",
      ],
      CategoryImage: "electronics.jpg",
    },
    {
      CategoryName: "accessories",
      SubCategory: ["jewelry", "watch", "shoes"],
      CategoryImage: "home.png",
    },
    {
      CategoryName: "appliances",
      SubCategory: [
        "refrigerator",
        "washing machine",
        "gas stove",
        "exhaust fan",
        "fan",
        "ac",
        "mixer grinder",
        "heater",
        "vaccum cleaner",
        "tv",
      ],
      CategoryImage: "appliances.jpg",
    },
  ];

  return (
    <Context.Provider
      value={{
        isAlert,
        setIsAlert,
        setIsError,
        data,
        isLogin,
        setIsLogin,
      }}
    >
      <MantineProvider theme={{ loader: "bars" }}>
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
          crossOrigin="anonymous"
        ></link>
        <link
          rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"
        ></link>
        <Head>
          <meta name="description" content="Generated by create next app" />
        </Head>
        <div
          className="d-flex justify-content-between flex-column"
          style={{
            minHeight: "100vh",
            marginInline: "1rem",
          }}
        >
          <Navbar />
          <Component {...pageProps} />
          <footer
            className="text-center"
            style={{
              marginBlock: "1rem",
            }}
          >
            <Text color="dimmed" size="sm">
              Â© 2022 Apna Shop. All rights reserved.
            </Text>
          </footer>
        </div>
        {isAlert.alert && (
          <Alert
            alert={isAlert.alert}
            message={isAlert.message}
            setIsAlert={setIsAlert}
          />
        )}
        <Script
          src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
          integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
          crossOrigin="anonymous"
        ></Script>
      </MantineProvider>
    </Context.Provider>
  );
}

export default MyApp;
